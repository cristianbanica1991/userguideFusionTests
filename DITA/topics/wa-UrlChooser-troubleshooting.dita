<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE troubleshooting PUBLIC "-//OASIS//DTD DITA 1.3 Troubleshooting//EN" "troubleshooting.dtd">
<troubleshooting id="wa-UrlChooser-troubleshooting">
  <title>oxy_urlChooser Form Control Does Not Show the Browse Button</title>
  <troublebody>
    <condition id="problem">
      <title>Problem</title>
      <p>The <codeph>oxy_urlChooser</codeph> form control in <ph keyref="product"/> does not show
        the browse button near the text field. Other actions such as inserting an image or a link to
        another file may not work or may show a text field instead of a file browser.</p>
    </condition>
    <troubleSolution>
      <cause id="cause">
        <title>Cause</title>
        <p>The <codeph>oxy_urlChooser</codeph> form control uses the <codeph>UrlChooser</codeph>
            (<xref keyref="url_UrlChooser">sync.api.UrlChooser</xref>) installed from a JavaScript
          plugin. If no such <codeph>UrlChooser</codeph> is installed, the browse button does not
          appear in the UI.</p>
      </cause>
      <remedy id="solution">
        <title>Solution</title>
        <steps-informal>
          <p id="p_gkd_cbf_1zb">You can install an <codeph>UrlChooser</codeph> that allows for
            choosing a resource in your CMS. The following code snippet implements a dummy
            <codeph>UrlChooser</codeph> that shows a prompt to the user that asks for the URL:</p>
          <codeblock id="codeblock_dy2_bky_zyb" outputclass="language-javascript">var DummyUrlChooser = function() {
  sync.api.UrlChooser.call(this);
};
DummyUrlChooser.prototype = Object.create(sync.api.UrlChooser.prototype);
DummyUrlChooser.prototype.constructor = DummyUrlChooser;

// Only support image choosing
DummyUrlChooser.prototype.supports = function(type) {
    return type == sync.api.UrlChooser.Type.IMAGE;
};
// 
DummyUrlChooser.prototype.chooseUrl = function(context, chosen) {
  if (context.getType() == sync.api.UrlChooser.Type.IMAGE) {
    var result = prompt();
    chosen(result);
  }
  return null;
};</codeblock>
          <p>Then, you can register it using the following API call:
            <codeblock id="codeblock_ktf_hky_zyb" outputclass="language-javascript">workspace.setUrlChooser(new DummyUrlChooser());</codeblock></p>
        </steps-informal>
      </remedy>
    </troubleSolution>
  </troublebody>
</troubleshooting>
